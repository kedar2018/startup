<!-- app/views/layouts/active_admin_custom.html.erb -->
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= stylesheet_link_tag "active_admin", media: "all" %>
  <%= javascript_include_tag "active_admin" %>
  <meta name="aa-layout" content="custom">

<script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/super-build/ckeditor.js"></script>
<style>
  .ck-editor__editable[role="textbox"] { min-height: 520px; }
  .ck-content { font-size: 16px; }
</style>

<script>
  function csrfToken() {
    const t = document.querySelector('meta[name="csrf-token"]');
    return t && t.content;
  }

  // Upload to Rails (Active Storage). Expects controller at POST /ckeditor/uploads returning { url: "..." }.
  function uploadToRails(file) {
    const data = new FormData();
    data.append("upload", file);
    return fetch("/ckeditor/uploads", {
      method: "POST",
      headers: { "X-CSRF-Token": csrfToken() },
      body: data
    }).then(function (r) {
      if (!r.ok) throw new Error("Upload failed");
      return r.json();
    }).then(function (json) {
      return json.url;
    });
  }

  // Convert dropped/pasted non-image files into links after upload.
  function FilesAsLinksPlugin(editor) {
    const viewDoc = editor.editing.view.document;
    viewDoc.on("clipboardInput", function (_evt, data) {
      const dt = data && data.dataTransfer;
      if (!dt || !dt.files || !dt.files.length) return;
      const files = Array.from(dt.files).filter(function (f) { return !/^image\//i.test(f.type); });
      if (!files.length) return;

      files.forEach(function (file) {
        uploadToRails(file).then(function (url) {
          editor.model.change(function (writer) {
            const text = writer.createText(file.name, { linkHref: url });
            editor.model.insertContent(text, editor.model.document.selection);
            writer.insertText(" ", editor.model.document.selection.getFirstPosition());
          });
        }).catch(function (e) { console.error("File upload failed:", e); });
      });
    });
  }

  function initCkEditors(scope){
    const root  = scope || document;
    const nodes = root.querySelectorAll('textarea.js-ck:not([data-cked])');
    if (!nodes.length || !window.CKEDITOR || !CKEDITOR.ClassicEditor) return;

    nodes.forEach(function(el){
      if (el.dataset.cked === '1') return;

      CKEDITOR.ClassicEditor.create(el, {
        toolbar: {
          items: [
            'sourceEditing','|',
            'undo','redo','|','findAndReplace','selectAll','removeFormat','|',
            'heading','|',
            'bold','italic','underline','strikethrough','code','subscript','superscript','|',
            'fontSize','fontFamily','fontColor','fontBackgroundColor','highlight','|',
            'link','insertTable','imageUpload','mediaEmbed','horizontalLine','pageBreak','specialCharacters','|',
            'bulletedList','numberedList','todoList','|',
            'outdent','indent','alignment','|',
            'blockQuote','codeBlock'
          ],
          shouldNotGroupWhenFull: true
        },

        heading: {
          options: [
            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
            { model: 'heading1',  view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
            { model: 'heading2',  view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
            { model: 'heading3',  view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
            { model: 'heading4',  view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' }
          ]
        },

        list: { properties: { styles: true, startIndex: true, reversed: true} },
        link: { decorators: { addTargetToExternalLinks: true } },
        fontSize: { options: [10,12,14,'default',18,20,24,30,36] },
        htmlSupport: { allow: [ { name: /.*/, attributes: true, classes: true, styles: true } ] },
        htmlEmbed: { showPreviews: true },

        // Images: CKEditor simple upload â†’ Rails endpoint
        simpleUpload: {
          uploadUrl: '/ckeditor/uploads',
          headers: { 'X-CSRF-Token': csrfToken() }
        },

        // Extra: non-image file uploads become links
        extraPlugins: [ FilesAsLinksPlugin ],

        removePlugins: [
          'CloudServices',
          'CKBox','CKBoxUtils','CKBoxImageEdit',
          'CKFinder','CKFinderUploadAdapter','EasyImage',
          'RealTimeCollaborativeComments','RealTimeCollaborativeTrackChanges','RealTimeCollaborativeRevisionHistory',
          'PresenceList','Comments','TrackChanges','TrackChangesData','RevisionHistory',
          'ExportPdf','ExportWord','ImportWord',
          'AIAssistant','MultiLevelList','TableOfContents','FormatPainter','Template',
          'SlashCommand','PasteFromOfficeEnhanced','CaseChange','WProofreader','MathType','Pagination',
          'DocumentOutline','DocumentOutlineUI'
        ]
      })
      .then(function(){ el.dataset.cked = '1'; })
      .catch(function(e){ console.error('CKEditor init error:', e); });
    });
  }

  document.addEventListener('DOMContentLoaded', function(){ initCkEditors(document); });
  if (window.jQuery) {
    jQuery(document).on('pjax:complete has_many_add:after', function(_e, c){
      initCkEditors((c && c[0]) || document);
    });
  }
  document.addEventListener('turbo:load', function(){ initCkEditors(document); });
  document.addEventListener('page:load',  function(){ initCkEditors(document); });
</script>


 <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
                          crossorigin: "anonymous", referrerpolicy: "no-referrer" %>

  <style id="aa-icon-picker-styles">
    .aa-icon-modal-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.35);z-index:10000;display:flex;align-items:center;justify-content:center}
    .aa-icon-modal{background:#fff;border-radius:10px;box-shadow:0 10px 30px rgba(0,0,0,.25);width:min(980px,90vw);max-height:80vh;display:flex;flex-direction:column;overflow:hidden}
    .aa-icon-modal header{padding:.75rem 1rem;border-bottom:1px solid #e5e7eb;display:flex;gap:.75rem;align-items:center}
    .aa-icon-modal header input{flex:1;min-width:0}
    .aa-icon-grid{padding:10px;overflow:auto}
    .aa-icon-grid .aa-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(120px,1fr));gap:8px}
    .aa-icon-card{border:1px solid #e5e7eb;border-radius:8px;padding:8px;display:flex;flex-direction:column;align-items:center;gap:6px;cursor:pointer;background:#fff}
    .aa-icon-card:hover{background:#f8fafc}
    .aa-icon-name{font-size:12px;color:#475569;text-align:center;word-break:break-word}
    .aa-chip{font-size:11px;border:1px solid #e5e7eb;border-radius:999px;padding:2px 8px;background:#f1f5f9;color:#334155}
    .aa-modal-footer{display:flex;justify-content:flex-end;padding:.5rem .75rem;border-top:1px solid #e5e7eb}
    .aa-btn{appearance:none;border:1px solid #cbd5e1;background:#fff;border-radius:6px;padding:.4rem .7rem;cursor:pointer}
    .aa-btn.primary{background:#2563eb;border-color:#2563eb;color:#fff}
    .aa-empty{padding:2rem;color:#64748b;text-align:center}
  </style>
 <script>
    (function () {

  /* =========================================================
     Config (CDNs)
  ========================================================= */
  var FA_CSS    = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css";
  var ICONS_JSON= "https://cdn.jsdelivr.net/gh/FortAwesome/Font-Awesome@5.15.4/metadata/icons.json";
  var CK_SRC    = "https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js";

  /* =========================================================
     Utilities
  ========================================================= */
  function ensureStylesheet(href) {
    for (var i = 0; i < document.styleSheets.length; i++) {
      if (document.styleSheets[i].href && document.styleSheets[i].href.indexOf(href) >= 0) return;
    }
    var l = document.createElement("link");
    l.rel = "stylesheet";
    l.href = href;
    l.crossOrigin = "anonymous";
    l.referrerPolicy = "no-referrer";
    document.head.appendChild(l);
  }

  function injectPickerStyles() {
    if (document.getElementById("aa-icon-picker-styles")) return;
    var css = `
      .aa-icon-modal-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.35);z-index:10000;display:flex;align-items:center;justify-content:center}
      .aa-icon-modal{background:#fff;border-radius:10px;box-shadow:0 10px 30px rgba(0,0,0,.25);width:min(980px,90vw);max-height:80vh;display:flex;flex-direction:column;overflow:hidden}
      .aa-icon-modal header{padding:.75rem 1rem;border-bottom:1px solid #e5e7eb;display:flex;gap:.75rem;align-items:center}
      .aa-icon-modal header input{flex:1;min-width:0}
      .aa-icon-grid{padding:10px;overflow:auto}
      .aa-icon-grid .aa-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(120px,1fr));gap:8px}
      .aa-icon-card{border:1px solid #e5e7eb;border-radius:8px;padding:8px;display:flex;flex-direction:column;align-items:center;gap:6px;cursor:pointer;background:#fff}
      .aa-icon-card:hover{background:#f8fafc}
      .aa-icon-name{font-size:12px;color:#475569;text-align:center;word-break:break-word}
      .aa-chip{font-size:11px;border:1px solid #e5e7eb;border-radius:999px;padding:2px 8px;background:#f1f5f9;color:#334155}
      .aa-empty{padding:2rem;color:#64748b;text-align:center}
      .aa-btn{appearance:none;border:1px solid #cbd5e1;background:#fff;border-radius:6px;padding:.4rem .7rem;cursor:pointer}
    `;
    var s = document.createElement("style");
    s.id = "aa-icon-picker-styles";
    s.textContent = css;
    document.head.appendChild(s);
  }

  function fetchIconsMeta() {
    return fetch(ICONS_JSON, { cache: "force-cache" }).then(function(r){ return r.json(); });
  }

  /* =========================================================
     Icon Picker Modal
  ========================================================= */
  function openIconPicker(opts) {
    var onPick = opts && opts.onPick;
    var currentStyle = (opts && opts.currentStyle) || "fas";

    var backdrop = document.createElement("div");
    backdrop.className = "aa-icon-modal-backdrop";
    var modal = document.createElement("div");
    modal.className = "aa-icon-modal";
    backdrop.appendChild(modal);

    modal.innerHTML = ''
      + '<header>'
      + '  <strong style="white-space:nowrap">Choose an icon</strong>'
      + '  <input type="search" class="aa-search" placeholder="Search (e.g. user, shield, android)â€¦" />'
      + '  <select class="aa-style" style="width:auto;max-width:160px">'
      + '    <option value="fas"' + (currentStyle==="fas"?' selected':'') + '>Solid</option>'
      + '    <option value="far"' + (currentStyle==="far"?' selected':'') + '>Regular</option>'
      + '    <option value="fab"' + (currentStyle==="fab"?' selected':'') + '>Brands</option>'
      + '  </select>'
      + '  <button class="aa-btn" data-action="close">Close</button>'
      + '</header>'
      + '<div class="aa-icon-grid">'
      + '  <div class="aa-grid"></div>'
      + '  <div class="aa-empty d-none">No icons match your search.</div>'
      + '</div>';

    document.body.appendChild(backdrop);

    var search = modal.querySelector(".aa-search");
    var styleSel = modal.querySelector(".aa-style");
    var grid = modal.querySelector(".aa-grid");
    var empty = modal.querySelector(".aa-empty");

    var all = [], view = [];

    function render() {
      grid.innerHTML = "";
      var style = styleSel.value; // fas/far/fab
      var shown = 0;

      view.forEach(function (it) {
        // Only show card if icon supports chosen style
        if ((style === "fas" && !it.styles.includes("solid")) ||
            (style === "far" && !it.styles.includes("regular")) ||
            (style === "fab" && !it.styles.includes("brands"))) return;

        var card = document.createElement("button");
        card.type = "button";
        card.className = "aa-icon-card";
        var cls = (style === "fas" ? "fas fa-" + it.key
                 : style === "far" ? "far fa-" + it.key
                 : "fab fa-" + it.key);
        card.innerHTML = ''
          + '<i class="' + cls + '" style="font-size:20px"></i>'
          + '<div class="aa-icon-name">' + it.key + '</div>'
          + '<span class="aa-chip">' + style.toUpperCase() + '</span>';
        card.addEventListener("click", function () {
          if (onPick) onPick({ style: style, name: it.key });
          close();
        });
        grid.appendChild(card);
        shown++;
      });

      if (empty) empty.classList.toggle("d-none", shown > 0);
    }

    function applyFilter() {
      var q = (search.value || "").trim().toLowerCase();
      view = q ? all.filter(function(it){ return it.key.indexOf(q) >= 0; }) : all;
      render();
    }

    function close() {
      document.removeEventListener("keydown", onKey);
      backdrop.remove();
    }
    function onKey(e) { if (e.key === "Escape") close(); }

    document.addEventListener("keydown", onKey);
    modal.querySelector("[data-action='close']").addEventListener("click", close);
    search.addEventListener("input", applyFilter);
    styleSel.addEventListener("change", render);

    // Load dataset
    fetchIconsMeta().then(function(meta){
      all = Object.keys(meta).map(function(k){ return { key:k, styles: (meta[k].styles || []) }; })
                             .sort(function(a,b){ return a.key.localeCompare(b.key); });
      view = all;
      render();
    }).catch(function(err){
      grid.innerHTML = "<div class='aa-empty'>Failed to load icon list.</div>";
      console.error("Icon metadata load failed:", err);
    });
  }

  /* =========================================================
     Wire pickers for Services and Products forms
  ========================================================= */
  function wireOne(styleId, nameId, previewId, buttonId) {
    var styleInput = document.getElementById(styleId);
    var nameInput  = document.getElementById(nameId);
    var preview    = document.getElementById(previewId);
    var btn        = document.getElementById(buttonId);
    if (!btn || !styleInput || !nameInput) return;

    function updatePreview(){
      var s = styleInput.value || "fas";
      var n = nameInput.value  || "star";
      if (preview) preview.className = s + " fa-" + n;
    }

    btn.addEventListener("click", function(e){
      e.preventDefault();
      openIconPicker({
        currentStyle: styleInput.value || "fas",
        onPick: function(icon){
          styleInput.value = icon.style;
          nameInput.value  = icon.name;
          updatePreview();
        }
      });
    });

    styleInput.addEventListener("change", updatePreview);
    nameInput.addEventListener("input", updatePreview);
    updatePreview();
  }

  function initIconPickers(){
    ensureStylesheet(FA_CSS);
    injectPickerStyles();
    // Services form
    wireOne("service_icon_style",  "service_icon_name",  "aa-icon-preview",          "aa-open-icon-picker");
    // Products form
    wireOne("product_icon_style",  "product_icon_name",  "aa-product-icon-preview",  "aa-open-product-icon-picker");
  }

  /* =========================================================
     CKEditor 5 (for textareas with .js-ck or .js-ckeditor)
  ========================================================= */
  var ckPromise;
  var editors = new Map();

  function ensureCK() {
    if (window.ClassicEditor) return Promise.resolve();
    if (!ckPromise) {
      ckPromise = new Promise(function (resolve, reject) {
        var s = document.createElement("script");
        s.src = CK_SRC;
        s.onload = resolve;
        s.onerror = reject;
        document.head.appendChild(s);
      });
    }
    return ckPromise;
  }

  function mountEditors(scope) {
    scope = scope || document;
    var areas = scope.querySelectorAll("textarea.js-ck, textarea.js-ckeditor");
    areas.forEach(function (el) {
      if (editors.has(el)) return;
      window.ClassicEditor.create(el, {
        toolbar: ["heading","|","bold","italic","link","|","bulletedList","numberedList","blockQuote","|","undo","redo"]
      }).then(function (instance) {
        editors.set(el, instance);
      }).catch(function (err) {
        console.error("CKEditor init failed:", err);
      });
    });
  }

  function unmountEditors() {
    editors.forEach(function (editor) {
      try { editor.destroy(); } catch(e){}
    });
    editors.clear();
  }

  function initCK() {
    ensureCK().then(function(){ mountEditors(); });
  }

  /* =========================================================
     Boot on AA lifecycle events + plain DOM
  ========================================================= */
  function bootAll() {
    try { initIconPickers(); } catch(e){ console.error(e); }
    try { initCK(); } catch(e){ console.error(e); }
  }

  document.addEventListener("active_admin:loaded", bootAll);
  document.addEventListener("DOMContentLoaded",    bootAll);
  document.addEventListener("turbo:load",          bootAll);
  document.addEventListener("turbolinks:load",     bootAll);

  // Cleanup for Turbo/Turbolinks navigations
  document.addEventListener("turbo:before-render",     unmountEditors);
  document.addEventListener("turbolinks:before-cache", unmountEditors);


    })();
  </script>

</head>
<body class="<%= controller.try(:body_classes) || '' %>">

  <%= yield %>
</body>
</html>
